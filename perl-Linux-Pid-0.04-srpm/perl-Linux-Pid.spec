#
#   - Linux::Pid -
#   This spec file was automatically generated by cpan2rpm [ver: 2.028]
#   The following arguments were used:
#       Linux-Pid-0.04.tar.gz --no-sign
#   For more information on cpan2rpm please visit: http://perl.arix.com/
#

%define pkgname Linux-Pid
%define filelist %{pkgname}-%{version}-filelist
%define NVR %{pkgname}-%{version}-%{release}
%define maketest 1

name:      perl-Linux-Pid
summary:   Linux-Pid - Get the native PID and the PPID on Linux
version:   0.04
release:   0.1%{?dist}
vendor:    Copyright c <>
packager:  Nico Kadel-Garcia <nico.kadel@tufts.edu>
license:   Artistic
group:     Applications/CPAN
url:       http://www.cpan.org
buildroot: %{_tmppath}/%{name}-%{version}-%(id -u -n)
prefix:    %(echo %{_prefix})
source:    Linux-Pid-0.04.tar.gz
# Not automatically included by cpan2rpm
BuildRequires: gcc
BuildRequires: perl(ExtUtils::MakeMaker)
# To pass "make test"
BuildRequires: perl(Test::More)

%description
Why should one use a module to get the PID and the PPID of a process
where there are the C<$$> variable and the C<getppid()> builtin ? (Not
mentioning the equivalent C<POSIX::getpid()> and C<POSIX::getppid()>
functions.)

In fact, this is useful on Linux, with multithreaded programs. Linux' C
library, using the linux thread model, returns different values of the
PID and the PPID from different threads. (Other thread models such as
NPTL don't have the same behaviour). This module forces perl to call the
underlying C functions C<getpid()> and C<getppid()>.

#
# This package was generated automatically with the cpan2rpm
# utility.  To get this software or for more information
# please visit: http://perl.arix.com/
#

%prep
%setup -q -n %{pkgname}-%{version} 
chmod -R u+w %{_builddir}/%{pkgname}-%{version}

%build
grep -rsl '^#!.*perl' . |
     grep -v '.bak$' |xargs --no-run-if-empty \
     %__perl -MExtUtils::MakeMaker -e 'MY->fixin(@ARGV)'
CFLAGS="$RPM_OPT_FLAGS"

# Use "vendor" to install in correct locations on RHEL 6
%{__perl} Makefile.PL INSTALLDIRS=vendor `%{__perl} -MExtUtils::MakeMaker -e ' print qq|PREFIX=%{buildroot}%{_prefix}| if \$ExtUtils::MakeMaker::VERSION =~ /5\.9[1-6]|6\.0[0-5]/ '`

%{__make} 
%if %maketest
%{__make} test
%endif

%install
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%{makeinstall} `%{__perl} -MExtUtils::MakeMaker -e ' print \$ExtUtils::MakeMaker::VERSION <= 6.05 ? qq|PREFIX=%{buildroot}%{_prefix}| : qq|DESTDIR=%{buildroot}| '` \
	  INSTALL_BASE=%{_prefix} \
	  INSTALL_PRIVLIB=%{_libdir}/perl5 \
	  SITELIBEXP=%{_libdir}/perl5 \
	  SITEARCHEXP=%{_libdir}/perl5

cmd=/usr/share/spec-helper/compress_files
[ -x $cmd ] || cmd=/usr/lib/rpm/brp-compress
[ -x $cmd ] && $cmd

# SuSE Linux
if [ -e /etc/SuSE-release -o -e /etc/UnitedLinux-release ]
then
    %{__mkdir_p} %{buildroot}/var/adm/perl-modules
    %{__cat} `find %{buildroot} -name "perllocal.pod"`  \
        | %{__sed} -e s+%{buildroot}++g                 \
        > %{buildroot}/var/adm/perl-modules/%{name}
fi

# remove special files
find %{buildroot} -name "perllocal.pod" \
    -o -name ".packlist"                \
    -o -name "*.bs"                     \
    |xargs -i rm -f {}

# no empty directories
find %{buildroot}%{_prefix}             \
    -type d -depth                      \
    -exec rmdir {} \; 2>/dev/null

%{__perl} -MFile::Find -le '
    find({ wanted => \&wanted, no_chdir => 1}, "%{buildroot}");
    print "%doc  Changes README";
    for my $x (sort @dirs, @files) {
        push @ret, $x unless indirs($x);
        }
    print join "\n", sort @ret;

    sub wanted {
        return if /auto$/;

        local $_ = $File::Find::name;
        my $f = $_; s|^\Q%{buildroot}\E||;
        return unless length;
        return $files[@files] = $_ if -f $f;

        $d = $_;
        /\Q$d\E/ && return for reverse sort @INC;
        $d =~ /\Q$_\E/ && return
            for qw|/etc %_prefix/man %_prefix/bin %_prefix/share|;

        $dirs[@dirs] = $_;
        }

    sub indirs {
        my $x = shift;
        $x =~ /^\Q$_\E\// && $x ne $_ && return 1 for @dirs;
        }
    ' > %filelist

[ -z %filelist ] && {
    echo "ERROR: empty %files listing"
    exit -1
    }

%clean
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%files -f %filelist
%defattr(-,root,root)

%changelog
* Fri Sep 14 2012 Nico Kadel-Garcia <nico.kadel@tufts.edu> - 0.04-0.1
- Add BuildRequires: gcc
- Add BuildRequires: ExtUtils::MakeMaker
- Add Test::More to pass make test
- Set package name manually
- Disable buildarch

* Mon Aug 20 2012 Nico Kadel-Garcia <nico.kadel@tufts.edu> - 0.04-0.1
- Initial build.
